<body class="container author">
  <div class="container">

  <div class="welcome-member">

    <% if @author.first_name %>
        <h2><%=@author.full_name %></h2>
    <% else %>
        <h2>Welcome <%=@author.email %></h2>
    <%end%>

  </div>
  <br>
  <br>


<div class="sort-book-options">

  <button id="script-button">view your scripts</button> <br><br>

    <h3>Your Script Inventory</h3>

      <select id="book-sort-dropdown-menu" class="ui search dropdown"  >
        <option value="">Sort By</option>
        <option value="AZ">Books A-Z</option>
        <option value="ZA">Books Z-A</option>
        <option value="AZ">Recent Uploads</option>
      </select>

</div>

<br>
    <div id="book-search-bar" class="ui right aligned category search">
      <div class="ui icon input">
        <input class="prompt" type="text" placeholder="Search by title/category">
        <i class="search icon"></i>
      </div>
      <div class="results"></div>
    </div>

<br>
<br>

<div id="authors-books" data-id="<%=@author.id%>" class="ui cards">


</div>

<!-- <div id="new-books">
</div> -->
<br>
<br>
<br>
    <div id="add-book-form-box">
      <button id="add-book">Add A New Script</button>
      <div id="book-form"></div>
    </div>

</div>
<br>

</body>

<script type="text/javascript">




    $('#add-book').click(renderForm)


function renderForm() {
        $('#book-form').html("<%= j render partial: 'books/form' %>")
}



function submitForm(e) {
        e.preventDefault()
        const id = $('#author-id').attr('data-id')
        const values = $(this).serialize()
        posting = $.post('/books', values)
        .done(function(values) {
            console.log(vaules)
            getCurrentBooks()
            $('form').trigger('reset')
        })
        console.log('done')
}


$(function() {


  $('#script-button').click(getCurrentBooks)

  $('.ui.search.dropdown').change(function() {
    const searchOption= ($( ".ui.search.dropdown option:selected").text());
    const authorId = $('#authors-books').attr('data-id')
    let sortedBooks = []
    let title;

    posting = $.getJSON('/authors/'+authorId+'/book_data')
    posting.done(function(data) {
      const books = data["books"]
      if (searchOption === "Sort By") {
        getCurrentBooks()
      } else if (searchOption === "Books A-Z") {
        sortedBooks = sortBookAsc(books)
      } else if (searchOption === "Books Z-A") {
        sortedBooks = sortBookDesc(books)
      } else if (searchOption === "Recent Uploads") {
        sortedBooks = sortBookRecent(books)
      }
      console.log(sortedBooks)
      const authorBooks = sortedBooks.map(book => {
        title = book.title === "" ? '<em>untitled</em>' : titleCase(book.title)
        return displayCard(book)
      })
      refreshPageWithSortBooks(authorBooks)
    })
  })


  $('.prompt').keypress(function(e) {
    const searchTerm = $(this).val()
    const authorId=$("#authors-books").attr('data-id')
    if (e.which === 13) {
      posting = $.getJSON('/authors/'+authorId+'/book_data')
      posting.done(function(data) {
        const books = data["books"]
        const searchedBooks = books.filter(book => {
          return book.title.includes(searchTerm) || book.category.includes(searchTerm)
        })
        const selectedBooks = searchedBooks.map(book => {
          title = book.title === "" ? '<em>untitled</em>' : titleCase(book.title)
          return displayCard(book)
        })
        $("#authors-books").empty()
        selectedBooks.forEach( book => {
          $("#authors-books").append(book)
        })
        $('.prompt').val("")
      })
    }

  })

})



function getCurrentBooks() {
    const id = $('#authors-books').attr('data-id')
    let title;
    posting = $.getJSON('/authors/'+id+'/book_data', function(data) {
        const books = data["books"]
        const authorBooks = books.map(book => {
            title = book.title === "" ? '<em>untitled</em>' : titleCase(book.title)
            // return `<div class="four wide column"><a href="/authors/${id}/books/${book.id}" class="book-link" >`+title+'</a></div><br/>'
            return displayCard(book)
        })
        authorBooks.forEach( book => {
            $("#authors-books").append(book)
        })
      })
}


function sortBookAsc(data) {
      return data.sort(function(a,b){
          return a.title.localeCompare(b.title);
      })
}

function sortBookDesc(data) {
        return data.sort(function(a,b){
            return b.title.localeCompare(a.title);
      })
}

function sortBookRecent(data) {
    const books = data
    return books.sort(function(a, b) {
      a = new Date(a.created_at);
      b = new Date(b.created_at);
      return a>b ? -1 : a<b ? 1 : 0;
    })

};



function refreshPageWithSortBooks(data) {
    $("#authors-books").empty()
    data.forEach( book => {
      $("#authors-books").append(book)
    })
}

function titleCase(title) {
  if (title.indexOf(' ') === -1) {
    return title.charAt(0).toUpperCase()+title.slice(1)
  } else{
    return title.split(" ").map( word => { return word.charAt(0).toUpperCase()+word.slice(1) }).join(" ")
  }
}

function displayCard(data) {
  const book = data
  const title = book.title === "" ? '<em>untitled</em>' : titleCase(book.title)
  return `<div class="card">
    <div class="content">
      <div class="header">
        <a href="/books/${book.id}" class="book-link" >${title}</a>
      </div>
    </div>
  </div>`
}





</script>
